<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.supringboot.mybatis.mapper.WishMapper">

	<!-- 공구식품 찜하기 -->
	<insert id="likedItem" parameterType="WishItem">
		INSERT INTO liked (liked_id, user_id, item_id, amount)
		VALUES (LIKE_SEQ.NEXTVAL, #{user_id}, #{item.item_id}, #{amount})
	</insert>

	<resultMap id="wishItemResult" type="WishItem">
		<id column="liked_id" jdbcType="NUMERIC" property="liked_id" />
		<result column="user_id" jdbcType="NUMERIC" property="user_id" />
		<result column="amount" jdbcType="NUMERIC" property="amount" />

		<association property="item" column="item_id" javaType="Item">
			<id property="item_id" column="item_id" />
			<result property="title" column="title" />
			<result property="end_dt" column="end_dt" />
			<result property="item_price" column="item_price" />
			<result property="ship_price" column="ship_price" />
			<result property="item_status" column="item_status" />
			
			<association property="food" column="food_id" javaType="Food">
				<id property="food_id" column="food_id" />
				<result property="name" column="name" />
			</association>

			<collection property="images" ofType="Image">
				<id property="image_id" column="image_id" />
				<result property="image" column="image" />
			</collection>
		</association>
	</resultMap>

	<!-- 찜한 공구식품 목록 가져오기 -->
	<select id="getWishItem" parameterType="int" resultMap="wishItemResult">
		SELECT l.liked_id, l.user_id, l.amount, i.item_id, i.title, i.end_dt, i.item_price,
			i.ship_price, i.item_status, im.image_id, im.image, f.food_id, f.name
		FROM item i LEFT JOIN liked l ON i.item_id = l.item_id
				LEFT JOIN image im ON i.item_id = im.item_id
				LEFT JOIN food f ON f.food_id = i.food_id
		WHERE l.user_id=#{user_id}
	</select>

	<!-- 공구식품 찜하기 취소 -> 찜한 목록 페이지에서 취소 -->
	<delete id="cancelLikedItem" parameterType="int">
		DELETE FROM liked
		WHERE liked_id = #{liked_id}
	</delete>
	
	<!-- 공구식품 찜하기 취소 -> 식품 상세 페이지에서 취소 -->
	<delete id="cancelDetailLikedItem" parameterType="int">
		DELETE FROM liked
		WHERE user_id = #{user_id} AND item_id = #{item_id}
	</delete>

	<!-- 모든 공구식품 찜하기 취소하기 -->
	<delete id="deleteAllLikedItem" parameterType="int">
		DELETE FROM liked
		WHERE user_id = #{user_id}
	</delete>

	<!-- 찜하기 수정 -> 찜하기 화면에서 식품 수량을 변경할때 -->
	<update id="updateLikedItem" parameterType="WishItem">
		UPDATE liked
		SET amount = #{amount}
		WHERE user_id = #{user_id} AND item_id = #{item.item_id}
	</update>

	<!-- 찜한 식품 수량 변경 -> 식품 상세페이지에서 동일한 식품을 찜하기 했을때 사용 -->
	<update id="updateQuantity" parameterType="WishItem">
		UPDATE liked
		SET amount = amount + #{amount}
		WHERE user_id = #{user_id} AND item_id = #{item_id}
	</update>

	<!-- 찜한 식품 전체 금액 가져오기 -->
	<select id="totalMoney" parameterType="int" resultType="int">
		SELECT NVL(SUM(item_price * amount), 0) price
		FROM liked l, item i
		WHERE l.item_id = i.item_id AND l.user_id = #{user_id}
	</select>

	<!-- 찜한 식품 목록에 동일한 식품이 있는지 확인 -->
	<select id="isWishItem" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM liked
		WHERE user_id = #{user_id} AND item_id = #{item_id}
	</select>
	
	<select id="getOneWishItem" parameterType="int" resultMap="wishItemResult">
		SELECT l.liked_id, l.user_id, l.amount, i.item_id, i.title, i.end_dt, i.item_price,
			i.ship_price, i.item_status, im.image_id, im.image, f.food_id, f.name
		FROM item i LEFT JOIN liked l ON i.item_id = l.item_id
				LEFT JOIN image im ON i.item_id = im.item_id
				LEFT JOIN food f ON f.food_id = i.food_id
		WHERE l.liked_id = #{liked_id}
	</select>

</mapper>
